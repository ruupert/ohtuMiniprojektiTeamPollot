buildscript {
    repositories {
	mavenCentral()
        jcenter()
    }
    dependencies {
    	classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
        classpath "com.github.samueltbrown:gradle-cucumber-plugin:0.8"
    }
}


plugins {
    id 'net.ltgt.apt' version '0.10'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id "com.github.samueltbrown.cucumber" version "0.9"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: "com.github.samueltbrown.cucumber"
apply plugin: "java"

repositories {
    jcenter()
}

dependencies {
    testCompile "junit:junit-dep:4.11"
    testCompile "info.cukes:cucumber-java:1.1.7"
}

testResultsDirName = "results/test"

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/results/jacoco/test.exec")
    }
}





jacocoTestReport {
    executionData = files("$buildDir/results/jacoco/test.exec", "$buildDir/results/jacoco/cucumber.exec")
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "$buildDir/reports/jacoco"
    }
    dependsOn test
    dependsOn "cucumber"
}



//logging.captureStandardOutput LogLevel.QUIET

project.ext {
    cucumberVersion = "1.2.5"
    junitVersion = "4.12"
    seleniumVersion = "3.4.0"
}

run {
    standardInput = System.in
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}

tasks.coveralls {
  dependsOn 'check'
}


mainClassName='tip.Main'

dependencies {

    compileOnly 'org.projectlombok:lombok:1.16.18'
    compile("org.springframework.boot:spring-boot-devtools")
    apt "org.projectlombok:lombok:1.16.18"
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    
    compile("com.h2database:h2")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.heroku.sdk:heroku-jdbc:0.1.1")
    compile("org.postgresql:postgresql:9.4.1212.jre7")
    
    compile("org.springframework.boot:spring-boot-devtools")
    compile group: 'org.jsoup', name: 'jsoup', version: '1.10.2'
    
    compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version: seleniumVersion
    testCompile("io.github.bonigarcia:webdrivermanager:1.6.2") {
        exclude group: 'org.seleniumhq.selenium'
    }
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework:spring-test")
    testCompile "info.cukes:cucumber-core:" + cucumberVersion
    testCompile "info.cukes:cucumber-java:" + cucumberVersion
    testCompile "info.cukes:cucumber-junit:" + cucumberVersion
    testCompile "info.cukes:cucumber-spring:" + cucumberVersion
    testCompile "junit:junit:" + junitVersion
    compile 'info.cukes:cucumber-groovy:1.2.2'
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}


cucumber {
    formats = ['pretty','json:build/cucumber.json','junit:build/cucumber.xml']
    featureDirs = ['src/test/resources/tip']
    monochrome = false
    strict = false
    dryRun = false
    ignoreFailures = false
        jvmOptions {
      maxHeapSize = '512m'
    }    
}


jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    
}

